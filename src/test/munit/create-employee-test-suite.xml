<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="create-employee-test-suite.xml" />
	<munit:test name="create-employee-test-suite-success" doc:id="29333de2-8c8a-436b-b79d-6e3a5d89a197" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock request" doc:id="3516727c-2212-4d4b-bfae-2fb11cb96267" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5b493afa-09a6-4b13-8e3c-fef2783b24b0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://create_employee/mock-outcome.dwl')]" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="3746362a-8885-4358-8b9d-0a076da5be69" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5b493afa-09a6-4b13-8e3c-fef2783b24b0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert expression" doc:id="6a9d6a66-1463-4670-8e67-216eafe77446" >
						<munit-tools:that ><![CDATA[#[%dw 2.0
import create_employee::assert_request_payload
---
assert_request_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert expression" doc:id="adbd4a8c-33b6-46cc-abbe-be47e6382960" >
						<munit-tools:that ><![CDATA[#[%dw 2.0
import create_employee::asset_response_payload
---
asset_response_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="16f337c4-daf1-4d8e-8d94-1918d9ec9968" >
				<munit:payload value="#[readUrl('classpath://create_employee/mock_create_employee_input.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to create-employeeFlow" doc:id="02482fce-864c-4b00-9be7-38f9c1861911" name="create-employeeFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="2dd9ca55-76b7-49d7-967d-d17a8144c8bf" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import create_employee::assert_response
---
assert_response::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify call" doc:id="229eb03b-6adf-40c9-8714-0500b5ec4302" processor="http:request" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5b493afa-09a6-4b13-8e3c-fef2783b24b0" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
